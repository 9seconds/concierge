# -*- coding: utf-8 -*-


import datetime
import distutils.spawn
import os.path
import sys

import sshrc


HEADER = """
# THIS FILE WAS AUTOGENERATED BY sshrc on {date}.
# IT MAKES NO SENSE TO EDIT IT MANUALLY!
#
# SSHRC FILE: {sshrc_file}
#
# PLEASE VISIT https://github.com/9seconds/sshrc FOR DETAILS.
""".strip() + "\n\n"


SYSTEMD_CONFIG = """
[Unit]
Description=Daemon for converting ~/.sshrc to ~/.ssh/config
After=syslog.target

[Service]
ExecStart={command} -o {sshrc}
Restart=on-failure

[Install]
WantedBy=multi-user.target
""".strip()

SYSTEMD_SERVICE_NAME = "sshrcd.service"

SYSTEMD_INSTRUCTIONS = """
Please execute following lines or compose script:

$ mkdir -p "{systemd_user_path}" || true
$ cat > "{systemd_user_service_path}" <<EOF
{systemd_config}
EOF
$ systemctl --user enable {service_name}
$ systemctl --user start {service_name}
""".strip()


def make_header(**kwargs):
    return HEADER.format(
        date=kwargs.get("date", datetime.datetime.now().ctime()),
        sshrc_file=kwargs.get("sshrc_file", "???"))


def make_systemd_script():
    systemd_user_path = os.path.join(sshrc.HOME_DIR, ".config", "systemd",
                                     "user")
    systemd_user_service_path = os.path.join(systemd_user_path,
                                             SYSTEMD_SERVICE_NAME)
    systemd_config = SYSTEMD_CONFIG.format(
        command=distutils.spawn.find_executable(sys.argv[0]),
        sshrc=sshrc.DEFAULT_SSHCONFIG)

    yield 'mkdir -p "{0}" || true'.format(systemd_user_path)
    yield 'cat > "{0}" <<EOF\n{1}\nEOF'.format(systemd_user_service_path,
                                               systemd_config.strip())
    yield "systemctl --user enable {0}".format(SYSTEMD_SERVICE_NAME)
    yield "systemctl --user start {0}".format(SYSTEMD_SERVICE_NAME)


def make_systemd(**kwargs):
    return SYSTEMD_CONFIG.format(
        command=distutils.spawn.find_executable(sys.argv[0]),
        sshrc=sshrc.DEFAULT_SSHCONFIG)


def make_systemd_instruction(**kwargs):
    systemd_user_path = os.path.join(sshrc.HOME_DIR, ".config", "systemd",
                                     "user")
    systemd_user_service_path = os.path.join(systemd_user_path,
                                             SYSTEMD_SERVICE_NAME)
    systemd_config = make_systemd(**kwargs)

    yield 'mkdir -p "{0}"'.format(systemd_user_path)
    yield 'cat > "{0}" <<EOF\n{1}\nEOF'.format(systemd_user_service_path,
                                               systemd_config.strip())
    yield "systemctl --user enable {0}".format(SYSTEMD_SERVICE_NAME)
    yield "systemctl --user start {0}".format(SYSTEMD_SERVICE_NAME)

    return SYSTEMD_INSTRUCTIONS.format(
        systemd_user_path=systemd_user_path,
        systemd_user_service_path=systemd_user_service_path,
        service_name=SYSTEMD_SERVICE_NAME,
        systemd_config=systemd_config)
